/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.93
 * Generated at: 2025-07-01 05:33:26 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class write_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP들은 오직 GET, POST 또는 HEAD 메소드만을 허용합니다. Jasper는 OPTIONS 메소드 또한 허용합니다.");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html>\n");
      out.write("<head>\n");
      out.write("<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\n");
      out.write("<script\n");
      out.write("	src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\n");
      out.write("<meta charset=\"UTF-8\">\n");
      out.write("<!-- include libraries(jQuery, bootstrap) -->\n");
      out.write("<link\n");
      out.write("	href=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n");
      out.write("<script\n");
      out.write("	src=\"https://stackpath.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\n");
      out.write("\n");
      out.write("<!-- include summernote css/js -->\n");
      out.write("<link\n");
      out.write("	href=\"https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote.min.css\"\n");
      out.write("	rel=\"stylesheet\">\n");
      out.write("<script\n");
      out.write("	src=\"https://cdn.jsdelivr.net/npm/summernote@0.9.0/dist/summernote.min.js\"></script>\n");
      out.write("<script>\n");
      out.write("$(() => {\n");
      out.write("    // Summernote 활성화\n");
      out.write("    $(\"#content\").summernote({\n");
      out.write("        height: 250\n");
      out.write("    });\n");
      out.write("\n");
      out.write("    // 버튼 클릭 시 알림창\n");
      out.write("    $(\"input[type='button']\").click(function() {\n");
      out.write("        $(\"form\").attr({\n");
      out.write("        	action: \"/notice/regist\",\n");
      out.write("        	method: \"POST\" //머리 데이터를 실어 나르게 됨, 따라서 정보가 노출된다.\n");
      out.write("        })\n");
      out.write("        $(\"form\").submit();//전송\n");
      out.write("    });\n");
      out.write("    	\n");
      out.write("});\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<style>\n");
      out.write("body {\n");
      out.write("	font-family: Arial, Helvetica, sans-serif;\n");
      out.write("}\n");
      out.write("\n");
      out.write("* {\n");
      out.write("	box-sizing: border-box;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=text], select, textarea {\n");
      out.write("	width: 100%;\n");
      out.write("	padding: 12px;\n");
      out.write("	border: 1px solid #ccc;\n");
      out.write("	border-radius: 4px;\n");
      out.write("	box-sizing: border-box;\n");
      out.write("	margin-top: 6px;\n");
      out.write("	margin-bottom: 16px;\n");
      out.write("	resize: vertical;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=button] {\n");
      out.write("	background-color: #04AA6D;\n");
      out.write("	color: white;\n");
      out.write("	padding: 12px 20px;\n");
      out.write("	border: none;\n");
      out.write("	border-radius: 4px;\n");
      out.write("	cursor: pointer;\n");
      out.write("}\n");
      out.write("\n");
      out.write("input[type=submit]:hover {\n");
      out.write("	background-color: #45a049;\n");
      out.write("}\n");
      out.write("\n");
      out.write(".container {\n");
      out.write("	border-radius: 5px;\n");
      out.write("	background-color: #f2f2f2;\n");
      out.write("	padding: 20px;\n");
      out.write("}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("</head>\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("	<h3>Contact Form</h3>\n");
      out.write("\n");
      out.write("	<div class=\"container\">\n");
      out.write("		<form>\n");
      out.write("			<label for=\"fname\">Title</label> \n");
      out.write("			<input type=\"text\" id=\"fname\" name=\"title\" placeholder=\"Your title..\">\n");
      out.write("			<label for=\"lname\">Writer</label> \n");
      out.write("			<input type=\"text\" id=\"lname\" name=\"writer\" placeholder=\"Your writer..\">\n");
      out.write("			<label for=\"subject\">Content</label>\n");
      out.write("			<textarea id=\"content\" name=\"content\" placeholder=\"Write something..\"style=\"height: 200px\"></textarea>\n");
      out.write("			<input type=\"button\" value=\"submit\">\n");
      out.write("		</form>\n");
      out.write("	</div>\n");
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
